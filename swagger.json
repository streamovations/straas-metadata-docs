{
  "openapi": "3.0.0",
  "info": {
    "description": "Streamovations Metadata API",
    "version": "0.0.9",
    "title": "Streamovations Metadata API",
    "termsOfService": "",
    "contact": {
      "name": "support",
      "url": "https://streamovations.be",
      "email": "operations@streamovations.be"
    },
    "license": {
      "name": "GPL-3.0",
      "url": "https://opensource.org/licenses/GPL-3.0"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/{customer}/metadata/delegates": {
      "get": {
        "tags": [
          "Delegates"
        ],
        "summary": "Get delegates",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Filter for active or inactive delegates",
            "x-example": true
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Paginate filter starting from given delegate id in combination with limit"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Paginate filter for given limit started from last given delegate id",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "x-example": 100
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort ascending or descending based on given sortField",
            "enum": [
              "asc",
              "desc"
            ],
            "x-example": "asc"
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort ascending or descending based on given sortField",
            "enum": [
              "createdAt",
              "updatedAt"
            ],
            "x-example": "createdAt"
          },
          {
            "name": "firstname",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "Michel"
          },
          {
            "name": "lastname",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "Drets"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "getDelegates",
        "description": "List Delegates"
      },
      "post": {
        "tags": [
          "Delegates"
        ],
        "summary": "Create a delegate",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delegates"
            },
            "x-examples": {
              "example-1": {
                "firstname": "d7lxre",
                "lastname": "i7wb95",
                "email": "support@streamovations.be",
                "refId": "JV01",
                "active": true,
                "division": "507f1f77bcf86cd799439011",
                "role": "507f1f77bcf86cd79947896"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status 201"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "createDelegate",
        "description": "Create a Delegate"
      },
      "parameters": [
        {
          "type": "string",
          "name": "customer",
          "in": "path",
          "required": true,
          "minLength": 3,
          "maxLength": 255
        }
      ],
      "x-restlet": {
        "section": "Delegates"
      }
    },
    "/{customer}/metadata/delegates/export": {
      "get": {
        "tags": [
          "Delegates"
        ],
        "summary": "Export delegates",
        "description": "Exports delegates for download as metadata-delegates.json",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "exportDelegates"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        }
      ],
      "x-restlet": {
        "section": "Delegates"
      }
    },
    "/{customer}/metadata/delegates/{id}": {
      "get": {
        "tags": [
          "Delegates"
        ],
        "summary": "Get a delegate",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "getDelegate",
        "description": "Get a Delegate by ID"
      },
      "put": {
        "tags": [
          "Delegates"
        ],
        "summary": "Update a delegate",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delegatesOptional"
            },
            "x-examples": {
              "example-1": "\n{\n   \"firstname\" : \"d7lxre\",\n   \"lastname\" : \"i7wb95\"\n   \"email\": \"support@streamovations.be\"\n   \"refId\": \"JV01\",\n   \"active\" : true,\n   \"division\": \"CD&V\",\n   \"role\": \"burgemeester\"\n}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "updateDelegate",
        "description": "Update a Delegate by ID"
      },
      "delete": {
        "tags": [
          "Delegates"
        ],
        "summary": "Delete a delegate",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "deleteDelegate",
        "description": "Delete a Delegate by ID"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "ObjectId for delegate",
          "x-example": "5ce92d6a7fc5fa37c33eb885"
        }
      ],
      "x-restlet": {
        "section": "Delegates"
      }
    },
    "/{customer}/metadata/divisions": {
      "get": {
        "tags": [
          "Divisions"
        ],
        "summary": "Get divisions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        },
        "operationId": "getDivisions",
        "description": "List Divisions"
      },
      "post": {
        "tags": [
          "Divisions"
        ],
        "summary": "Create a division",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "": {
                  "$ref": "#/definitions/delegates"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        },
        "operationId": "createDivision",
        "description": "Create a Division"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        }
      ],
      "x-restlet": {
        "section": "Divisions"
      }
    },
    "/{customer}/metadata/divisions/{id}": {
      "get": {
        "tags": [
          "Divisions"
        ],
        "summary": "Get a division",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        },
        "operationId": "getDivision",
        "description": "Get a Division by ID"
      },
      "put": {
        "tags": [
          "Divisions"
        ],
        "summary": "Update a division",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        },
        "operationId": "createOrUpdateDivision",
        "description": "Update a Division by ID"
      },
      "delete": {
        "tags": [
          "Divisions"
        ],
        "summary": "Delete a division",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        },
        "operationId": "deleteDivision",
        "description": "Delete a Division by Id"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string",
          "x-example": "5ce92d6a7fc5fa37c33eb885"
        }
      ],
      "x-restlet": {
        "section": "Divisions"
      }
    },
    "/{customer}/metadata/divisions/export": {
      "get": {
        "tags": [
          "Divisions"
        ],
        "summary": "Export divisions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        },
        "operationId": "exportDivisions",
        "description": "Export Divisions for download"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        }
      ],
      "x-restlet": {
        "section": "Divisions"
      }
    },
    "/{customer}/metadata/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get roles",
        "parameters": [
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "x-example": 100
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-example": "asc"
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "createdAt",
              "updatedAt",
              "function",
              "name"
            ],
            "x-example": "createdAt"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "getRoles",
        "description": "List Roles"
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Create a role",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Mayor of Veurne"
                },
                "priority": {
                  "type": "integer",
                  "example": 0,
                  "minimum": 0
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status 201"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "createRole",
        "description": "Create a Role"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        }
      ],
      "x-restlet": {
        "section": "Roles"
      }
    },
    "/{customer}/metadata/roles/export": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Export Roles",
        "description": "Exports roles for download as metadata-roles.json",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "exportRoles"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        }
      ],
      "x-restlet": {
        "section": "Roles"
      }
    },
    "/{customer}/metadata/roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get a role",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "204": {
            "description": "Status 204"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "getRole",
        "description": "Get a Role by ID"
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "Update a role",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Mayor of Veurne"
                },
                "priority": {
                  "type": "integer",
                  "example": 0,
                  "minimum": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "304": {
            "description": "Status 304"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "updateRole",
        "description": "Update a Role by ID"
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete a role",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "304": {
            "description": "Status 304"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "deleteRole",
        "description": "Delete a Role by ID"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string",
          "x-example": "5ce92d6a7fc5fa37c33eb885"
        }
      ],
      "x-restlet": {
        "section": "Roles"
      }
    },
    "/{customer}/metadata/microphones": {
      "get": {
        "tags": [
          "Microphones"
        ],
        "summary": "Get Microphones",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-example": "true"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-example": 100
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "5ce92d6a7fc5fa37c33eb885"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-example": "desc"
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "status",
              "createdAt",
              "updatedAt",
              "mac",
              "id",
              "uuid",
              "room"
            ],
            "x-example": "status"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "2"
          },
          {
            "name": "refid",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "2-1"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "getMirophones",
        "description": "List Microphones"
      },
      "post": {
        "tags": [
          "Microphones"
        ],
        "summary": "Create microphone",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "room": {
                  "$ref": "#/definitions/room"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "uuid": {
                  "type": "string"
                },
                "mac": {
                  "type": "string"
                },
                "manufacturer": {
                  "type": "string",
                  "enum": [
                    "televic",
                    "shure",
                    "bosch",
                    "sennheiser"
                  ]
                },
                "active": {
                  "type": "boolean"
                },
                "status": {
                  "type": "boolean",
                  "default": false
                }
              },
              "required": [
                "room",
                "name",
                "id",
                "uuid",
                "mac"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status 201"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "createMicrophone",
        "description": "Create a Microphone"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        }
      ],
      "x-restlet": {
        "section": "Microphones"
      }
    },
    "/{customer}/metadata/microphones/{id}": {
      "get": {
        "tags": [
          "Microphones"
        ],
        "summary": "Get microphone",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "getMicrophone",
        "description": "Get a Microphone by ID"
      },
      "put": {
        "tags": [
          "Microphones"
        ],
        "summary": "Update microphone",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "room": {
                  "$ref": "#/definitions/room"
                },
                "id": {
                  "type": "integer"
                },
                "uuid": {
                  "type": "string"
                },
                "mac": {
                  "type": "string"
                },
                "manufacturer": {
                  "type": "string",
                  "enum": [
                    "televic",
                    "shure",
                    "bosch",
                    "sennheiser"
                  ]
                },
                "active": {
                  "type": "boolean"
                },
                "status": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "updateMicrophone",
        "description": "Update a Microhphone by ID"
      },
      "delete": {
        "tags": [
          "Microphones"
        ],
        "summary": "Delete Microphone",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "deleteMicrophone",
        "description": "Delete a Microphone by ID"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "objectID",
          "x-example": "5ce92d6a7fc5fa37c33eb885"
        }
      ],
      "x-restlet": {
        "section": "Microphones"
      }
    },
    "/{customer}/metadata/microphones/room/{room}": {
      "get": {
        "tags": [
          "Microphones"
        ],
        "summary": "Get microphones in a room",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "false",
              "true"
            ],
            "x-example": "true"
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "5ce92d6a7fc5fa37c33eb885"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "x-example": 100
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "desc"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "microphone id",
            "x-example": "2"
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "status",
              "createdAt",
              "updatedAt",
              "id",
              "uuid",
              "room",
              "mac"
            ],
            "x-example": "status"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "refid",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "2-1"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "getMicrophonesInRoom",
        "description": "Get Microhpones by RoomID"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        },
        {
          "name": "room",
          "in": "path",
          "required": true,
          "type": "integer",
          "description": "Room unique id",
          "x-example": 2,
          "minimum": 1
        }
      ],
      "x-restlet": {
        "section": "Microphones"
      }
    },
    "/{customer}/metadata/attendees": {
      "get": {
        "tags": [
          "Attendees"
        ],
        "summary": "Get attendees",
        "parameters": [
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "x-example": 100
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-example": "asc"
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "createdAt",
              "updatedAt",
              "_id"
            ],
            "x-example": "createdAt"
          },
          {
            "name": "microphone",
            "in": "query",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "getAttendees",
        "description": "List Attendees"
      },
      "post": {
        "tags": [
          "Attendees"
        ],
        "summary": "Create attendees",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "delegate",
                "microphone",
                "session"
              ],
              "properties": {
                "delegate": {
                  "$ref": "#/definitions/ID"
                },
                "role": {
                  "$ref": "#/definitions/ID"
                },
                "microphone": {
                  "$ref": "#/definitions/ID"
                },
                "session": {
                  "$ref": "#/definitions/session"
                }
              }
            },
            "x-examples": {
              "example-1": {
                "delegate": "5ce92d6a7fc5fa37c33eb885",
                "role": "5ce92d6a7fc5fa37c33eb885",
                "microphone": "5ce92d6a7fc5fa37c33eb885",
                "session": 100
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status 201"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "createAttendee",
        "description": "Add Attendee for Session"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        }
      ],
      "x-restlet": {
        "section": "Attendees"
      }
    },
    "/{customer}/metadata/attendees/{id}": {
      "get": {
        "tags": [
          "Attendees"
        ],
        "summary": "Get an attendee",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "204": {
            "description": "Status 204"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "getAttendee",
        "description": "Get Attendee by ID"
      },
      "put": {
        "tags": [
          "Attendees"
        ],
        "summary": "Update an attendee",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "delegate": {
                  "$ref": "#/definitions/ID"
                },
                "role": {
                  "$ref": "#/definitions/ID"
                },
                "microphone": {
                  "$ref": "#/definitions/ID"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        },
        "operationId": "updateAttendee",
        "description": "Update Attendee by ID"
      },
      "delete": {
        "tags": [
          "Attendees"
        ],
        "summary": "Delete an attendee",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "304": {
            "description": "Status 304"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "deleteAttendee",
        "description": "Delete Attendee by ID"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "objectId",
          "x-example": "5ce92d6a7fc5fa37c33eb885"
        }
      ],
      "x-restlet": {
        "section": "Attendees"
      }
    },
    "/{customer}/metadata/attendees/session/{session}": {
      "get": {
        "tags": [
          "Attendees"
        ],
        "summary": "Get attendees by session",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-example": true
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "x-example": 100
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-example": "asc"
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "createdAt",
              "updatedAt",
              "_id"
            ],
            "x-example": "createdAt"
          },
          {
            "name": "microphone",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "getAttendeesBySession",
        "description": "Get Attendees by Session"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        },
        {
          "name": "session",
          "in": "path",
          "required": true,
          "type": "integer",
          "description": "Session unique id",
          "x-example": 100,
          "minimum": 1
        }
      ],
      "x-restlet": {
        "section": "Attendees"
      }
    },
    "/{customer}/metadata/speeches": {
      "get": {
        "tags": [
          "Speeches"
        ],
        "summary": "Get speeches",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-example": true
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "5cf909247805517211b124e7"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "x-example": 100
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-example": "asc"
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "createdAt",
              "updatedAt",
              "start.realTime",
              "stop.realTime",
              "microphone.id"
            ],
            "x-example": "createdAt"
          },
          {
            "name": "microphone",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-example": 5
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "getSpeeches",
        "description": "List Speeches"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        }
      ],
      "x-restlet": {
        "section": "Speeches"
      }
    },
    "/{customer}/metadata/speeches/{id}": {
      "get": {
        "tags": [
          "Speeches"
        ],
        "summary": "Get a speech",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "description": "Get Speech by ID",
        "operationId": "getSpeech"
      },
      "delete": {
        "tags": [
          "Speeches"
        ],
        "summary": "Delete a speech",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "304": {
            "description": "Status 304"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "deleteSpeech",
        "description": "Delete Speech by ID"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "objectId",
          "x-example": "5ce92d6a7fc5fa37c33eb885"
        }
      ],
      "x-restlet": {
        "section": "Speeches"
      }
    },
    "/{customer}/metadata/speeches/session/{session}/status": {
      "post": {
        "tags": [
          "Speeches"
        ],
        "summary": "Update speech status",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "microphone",
                "room",
                "status",
                "timestamp"
              ],
              "properties": {
                "microphone": {
                  "type": "number",
                  "example": 7
                },
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "timestamp": {
                  "type": "number",
                  "example": 1559213701
                },
                "room": {
                  "$ref": "#/definitions/room"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Request"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized Request"
          },
          "500": {
            "description": "Internal Server error"
          }
        },
        "operationId": "updateSpeechStatus",
        "description": "Update Microphone Status - Creates Speech Entry based on status, enable microphone results in a new speech entry with timestamp as start"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        },
        {
          "name": "session",
          "in": "path",
          "required": true,
          "type": "integer",
          "description": "Session unique id",
          "x-example": 100,
          "minimum": 1
        }
      ],
      "x-restlet": {
        "section": "Speeches"
      }
    },
    "/{customer}/metadata/speeches/session/{session}": {
      "get": {
        "tags": [
          "Speeches"
        ],
        "summary": "Get speeches by session",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-example": true
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "5cf909247805517211b124e7"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "x-example": 100
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-example": "asc"
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "createdAt",
              "updatedAt",
              "start.realTime",
              "stop.realTime",
              "microphone.id"
            ],
            "x-example": "createdAt"
          },
          {
            "name": "microphone",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-example": 5
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "getSpeechesBySession",
        "description": "Get Speeches by Session"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        },
        {
          "name": "session",
          "in": "path",
          "required": true,
          "type": "integer",
          "description": "Session unique id",
          "x-example": 100,
          "minimum": 1
        }
      ],
      "x-restlet": {
        "section": "Speeches"
      }
    },
    "/{customer}/metadata/topics": {
      "post": {
        "tags": [
          "Topics"
        ],
        "summary": "Create a topic",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Topic Name 3"
                },
                "description": {
                  "type": "string",
                  "example": "Description for Topic Name 3"
                },
                "active": {
                  "type": "boolean",
                  "example": true
                },
                "start": {
                  "type": "object",
                  "properties": {
                    "realTime": {
                      "type": "integer",
                      "example": 1560115860000
                    }
                  },
                  "required": [
                    "realTime"
                  ]
                },
                "stop": {
                  "type": "object",
                  "properties": {
                    "realTime": {
                      "type": "integer",
                      "example": 1560116160000
                    },
                    "relativeTime": {
                      "type": "integer",
                      "example": 30
                    }
                  }
                },
                "session": {
                  "$ref": "#/definitions/session"
                }
              },
              "required": [
                "name",
                "session"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "createTopic",
        "description": "Create a Topic for Session"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        }
      ],
      "x-restlet": {
        "section": "Topics"
      }
    },
    "/{customer}/metadata/topics/{id}": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "Get a topic",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "getTopic",
        "description": "Get a Topic for ID"
      },
      "put": {
        "tags": [
          "Topics"
        ],
        "summary": "Update a topic",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Topic Name 1"
                },
                "description": {
                  "type": "string",
                  "description": "Description for Topic Name 1"
                },
                "active": {
                  "type": "boolean",
                  "example": false
                },
                "start": {
                  "required": [
                    "realTime"
                  ],
                  "type": "object",
                  "properties": {
                    "realTime": {
                      "type": "integer",
                      "example": 1560115860000
                    }
                  }
                },
                "stop": {
                  "required": [
                    "realTime",
                    "relativeTime"
                  ],
                  "type": "object",
                  "properties": {
                    "realTime": {
                      "type": "integer",
                      "example": 1560116160000
                    },
                    "relativeTime": {
                      "type": "string",
                      "example": "30"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "updateTopic",
        "description": "Update a Topic for ID"
      },
      "delete": {
        "tags": [
          "Topics"
        ],
        "summary": "Delete a topic",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "deleteTopic",
        "description": "Delete Topic for ID"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "objectId",
          "x-example": "5ce92d6a7fc5fa37c33eb885"
        }
      ],
      "x-restlet": {
        "section": "Topics"
      }
    },
    "/{customer}/metadata/topics/session/{session}": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "Get topics by session",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-example": true
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "string",
            "x-example": "5cfaa2571695e82e0d5c590b"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "x-example": 100
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-example": "asc"
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "createdAt",
              "updatedAt",
              "name",
              "stop.realTime",
              "start.realTime"
            ],
            "x-example": "createdAt"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "session",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          },
          "400": {
            "description": "Status 400"
          },
          "401": {
            "description": "Status 401"
          },
          "403": {
            "description": "Status 403"
          },
          "500": {
            "description": "Status 500"
          }
        },
        "operationId": "getTopicsBySession",
        "description": "Get Topics by Session"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Customer unique name",
          "x-example": "veurne",
          "minLength": 3,
          "maxLength": 255
        },
        {
          "name": "session",
          "in": "path",
          "required": true,
          "type": "integer",
          "description": "Session unique id",
          "x-example": 100,
          "minimum": 1
        }
      ],
      "x-restlet": {
        "section": "Topics"
      }
    },
    "/{customer}/metadata/topics/{id}/stop": {
      "post": {
        "tags": [
          "Topics"
        ],
        "summary": "Stop a Topic",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "stop": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        },
        "operationId": "stopTopic",
        "description": "Stop a Topic by ID"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 255
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "x-restlet": {
        "section": "Topics"
      }
    },
    "/{customer}/metadata/topics/{id}/start": {
      "post": {
        "tags": [
          "Topics"
        ],
        "summary": "Start a topic",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "start": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        },
        "operationId": "startTopic",
        "description": "Start a Topic by ID"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 255
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "x-restlet": {
        "section": "Topics"
      }
    },
    "/{customer}/metadata/topics/{id}/reset": {
      "post": {
        "tags": [
          "Topics"
        ],
        "summary": "Reset a topic",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        },
        "operationId": "resetTopic",
        "description": "Reset a Topic by ID"
      },
      "parameters": [
        {
          "name": "customer",
          "in": "path",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 255
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "x-restlet": {
        "section": "Topics"
      }
    }
  },
  "securityDefinitions": {
    "Custom": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": ""
    }
  },
  "definitions": {
    "customer": {
      "type": "string",
      "example": "veurne",
      "x-restlet": {
        "section": "Data Types"
      },
      "x-examples": {
        "example-1": "veurne"
      },
      "x-tags": [
        "customer"
      ],
      "minLength": 3,
      "maxLength": 255
    },
    "ID": {
      "type": "string",
      "example": "507f1f77bcf86cd799439011",
      "x-restlet": {
        "section": "Data Types"
      }
    },
    "room": {
      "type": "integer",
      "example": 2,
      "x-restlet": {
        "section": "Data Types"
      }
    },
    "session": {
      "type": "integer",
      "example": 100,
      "x-restlet": {
        "section": "Data Types"
      }
    },
    "delegates": {
      "type": "object",
      "example": {
        "firstname": "d7lxre",
        "lastname": "i7wb95",
        "email": "support@streamovations.be",
        "refId": "JV01",
        "active": true,
        "division": "507f1f77bcf86cd799439011",
        "role": "507f1f77bcf86cd79947896"
      },
      "x-restlet": {
        "section": "Data Types"
      },
      "properties": {
        "firstname": {
          "type": "string",
          "description": "First name of delegate",
          "example": "John"
        },
        "lastname": {
          "type": "string",
          "description": "Last name of delegate",
          "example": "Vanhoucke"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "refId": {
          "type": "string"
        },
        "division": {
          "$ref": "#/definitions/ID"
        },
        "role": {
          "$ref": "#/definitions/ID"
        }
      },
      "required": [
        "firstname",
        "lastname",
        "refId",
        "division",
        "role"
      ]
    },
    "delegatesOptional": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "description": "First name of delegate"
        },
        "lastname": {
          "type": "string",
          "description": "Last name of delegate"
        },
        "email": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "division": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "role": {
          "type": "string"
        }
      },
      "example": {
        "firstname": "d7lxre",
        "lastname": "i7wb95",
        "email": "support@streamovations.be",
        "refId": "JV01",
        "active": true,
        "division": "507f1f77bcf86cd799439011",
        "role": "507f1f77bcf86cd79947896"
      },
      "x-restlet": {
        "section": "Data Types"
      }
    }
  },
  "x-restlet": {
    "sections": {
      "Delegates": {
        "description": "Only one delegate can be bound to one attendee per session, an attendee can only have one delegate per session"
      },
      "Divisions": {
        "description": "A division can be bound to multiple delegates\n\nMultiple divisions can be bound to one delegate"
      },
      "Roles": {
        "description": "A role can be bound to multiple attendees\n\nMultiple roles can be bound to one attendee per session"
      },
      "Microphones": {
        "description": "Microphones are unique per customer based on an id, uuid and mac address and are bound to one room id. \n\nMicrophones cannot have the same id, uuid or mac address and cannot be bound to multiple rooms per microphone.\n\nA microphone can only be bound to one attendee per session, unless sharedMicrophone option is given when creating an attendee for a session"
      },
      "Attendees": {
        "description": "One attendee is bound to one session id\n\nOne attendee is bound to one delegate\n\nOne attendee is bound to one microphone, unless sharedMicrophone option is set when creating an attendee to share a microphone with multiple attendees\n\nOne attendee is bound to one seat\n\nOne attendee can be bound to one or more roles, multiple attendees can have the same roles\n\n"
      },
      "Speeches": {
        "description": "One Speech is bound to one session id\n\nOne Speech is bound to one Attendee\n\n"
      },
      "Topics": {
        "description": "One topic is bound to one session id"
      },
      "Other Metadata": {
        "description": "All other metadata that does not belong to custom created metadata section like\n\n* delegates\n* roles\n* attendees\n* microphones\n\nOther metadata data routes can be used to create metadata types dynamically"
      },
      "System": {},
      "Data Types": {}
    }
  },
  "schemes": [
    "https"
  ],
  "servers": [{ "url": "core-api.streamovations.be", "description": ""}]
}